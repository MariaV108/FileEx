public class Test4 {
    public static void main(String[] args) {
        Service service = ServiceLocator.getService("Service1");
        service.execute();
        service = ServiceLocator.getService("Service2");
        service.execute();

    }
}

interface Service {
    String getName();

    void execute();
}

class Service1 implements Service {
    @Override
    public String getName() {
        return "Service1";
    }

    @Override
    public void execute() {
        System.out.println("Executing Service1");
    }
}

class Service2 implements Service {
    @Override
    public String getName() {
        return "Service2";
    }

    @Override
    public void execute() {
        System.out.println("Executing Service2");
    }
}

class InitialContext {
    public Object lookup(String jnName) {
        if (jnName.equalsIgnoreCase("Service1")) {
            return new Service1();
        } else if (jnName.equalsIgnoreCase("Service2")) {
            return new Service2();
        }
        return null;
    }
}

class Cache {
    private List<Service> services = new ArrayList<>();

    public Service getServices(String serviceName) {
        for (Service service : services) {
            if (service.getName().equalsIgnoreCase(serviceName)) {
                System.out.println("Returned cache " + serviceName);
                return service;
            }
        }
        return null;
    }

    public void addServices(Service newService) {
        boolean exists = false;
        for (Service service : services) {
            if (service.getName().equalsIgnoreCase(newService.getName())) {
                exists = true;
            }
        }
        if (!exists) {
            services.add(newService);
        }
    }
}

class ServiceLocator {
    private static Cache cache = new Cache();

    public static Service getService(String jnName) {
        Service service = cache.getServices(jnName);
        if (service != null) {
            return service;
        }
        InitialContext context = new InitialContext();
        Service service1 = (Service) context.lookup(jnName);
        cache.addServices(service1);
        return service1;
    }
}
